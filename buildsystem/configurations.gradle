ext {

    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0
    def appVersionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch

    android = [
            applicationId    : "com.android.challenge",
            buildToolsVersion: "30.0.3",
            minSdkVersion    : 21,
            targetSdkVersion : 29,
            compileSdkVersion: 29,
            testRunner       : "com.android.challenge.base.EspressoTestRunner",
            versionCode      : appVersionCode,
            versionName      : "$versionMajor.$versionMinor.$versionPatch"
    ]


    endpoints = [
            dev : "\"https://7hgi9vtkdc.execute-api.sa-east-1.amazonaws.com/sandbox/\"",
            prod : "\"https://7hgi9vtkdc.execute-api.sa-east-1.amazonaws.com/sandbox/\""
    ]

//  Used to save the signature data on CI/CD securely
    def keystorePropertiesFile = rootProject.file("keystore/keystore.properties")
    def keystoreProperties = new Properties()

    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    } else {
        keystoreProperties.setProperty("signing_keystore_password", "\"${System.getenv('signing_keystore_password')}\"")
        keystoreProperties.setProperty("signing_key_alias", "\"${System.getenv('signing_key_alias')}\"")
        keystoreProperties.setProperty("signing_key_password", "\"${System.getenv('signing_key_password')}\"")
    }

    signing = [
            storeFile    : "../keystore/challenge.jks",
            storePassword: keystoreProperties['signing_keystore_password'],
            keyAlias     : keystoreProperties['signing_key_alias'],
            keyPassword  : keystoreProperties['signing_key_password']
    ]
}
